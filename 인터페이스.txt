인터페이스는 두 가지로 나눌 수 있다.


1. 기능(메소드)을 추상화한 인터페이스
2. 역할(클래스)을 추상화한 인터페이스


먼저 기능을 추상화한 인터페이스의 경우

공통 기능을 제공하여 기능을 필요로 하는 모든 클래스에게 제공될 수 있도록 한다.
-> 메소드(행동)를 인터페이스로 만들었다고 볼 수 있다. 어떤 일을 할 수 있는가?에 대해 초점을 맞춘다.
ex) Printable, Runnable, Eatable...

역할을 추상화한 인터페이스의 경우
특정 역할의 책임을 정의하여 특정 역할을 수행하는 클래스에게 제공될 수 있도록 한다.
-> 클래스(책임)를 인터페이스로 만들엇다고 볼 수 있다. 누가 무엇을 해야하는가?에 대해 초점을 맞춘다.
ex) Teacher - 김선생님,이선생님,박선생님.., Student - 김학생,유학생,박학생.. 