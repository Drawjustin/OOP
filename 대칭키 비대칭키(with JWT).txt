JWT 요약


JWT는 header payload signature 3 영역으로존재한다.
이때 header와 payload는 base64url로 간편하게 암호화하지만,
signature의 경우 서버의 개인키를 이용한 서명을 만들고 키를 이용해 검증하는 작업만 하게된다
-> 따라서 header, payload에는 중요한 정보를 넣지않는다.

header : 어떤암호를 사용했는가, 어떤 종류의 토큰인가
payload : 유통기한, 이름



내가 이해한 대칭키와 비대칭키의 핵심
대칭키 : 키만 훔치면 내가 서버인 척 가능하다.
비대칭키: 개인키를 훔치지 않는이상 서버인척 불가능하며, 공개키는 서버가 준 토큰이 진짜인지 가짜인지만 판별할 수 있다.



대칭키

특징:
하나의 키(비밀 키)를 사용해 JWT 생성과 검증을 모두 수행.
검증을 위해 키를 모든 검증 주체(서버나 클라이언트)와 공유해야 함.

장점:
구조가 간단하고 성능이 빠름.

단점:
키를 공유해야 하므로, 키가 노출되면 서명을 위조할 수 있음.
분산 환경에서 키 관리가 어려움.



비대칭키

특징:
개인 키: JWT 생성과 서명에 사용 (비밀로 유지).
공개 키: 서명 검증에만 사용 (자유롭게 배포 가능).

장점:
공개 키만 배포하면 여러 클라이언트가 독립적으로 검증 가능.
개인 키가 안전하게 관리되기만 하면 서명 위조가 불가능.
분산 환경이나 다수의 검증 주체가 있는 경우 확장성이 뛰어남.

단점:
서명 생성 과정이 대칭키에 비해 약간 느림.

왜 JWT에서 비대칭키가 유리한가?
JWT는 주로 서명 검증이 핵심 작업이다.

비대칭키에서는 공개 키만 배포하면 클라이언트나 다른 서버가 독립적으로 서명을 검증할 수 있어 확장성과 보안성이 뛰어나다.
대칭키는 모든 검증 주체가 비밀 키를 알아야 하므로, 분산 환경에서 비효율적이고 보안에 취약할 수 있다.

결론
대칭키: 단일 서버 환경이나 내부 시스템처럼 키 공유가 문제가 되지 않는 환경에 적합.
비대칭키: 검증 주체가 여러 개이거나, 키를 안전하게 관리해야 하는 분산 환경에 적합.
따라서, JWT처럼 주로 검증만 필요한 경우 비대칭키가 유리합니다.

https://raonctf.com/essential/study/web/asymmetric_key