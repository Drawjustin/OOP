객체지향의 사실과 오해

협력과 역할과 책임 그리고 행동과 속성

정말 정말 잘쓴책이다. 한줄한줄 어렵게 곱씹어 읽다보면 작가의 의도를 파악하고 해석하게된다.


책 요약

문제상황을 여러 객체들의 협력으로 바라봐야한다.
큰 문제상황을 작은 여러 문제상황으로 쪼개고, 작은 문제상황을 여러 책임으로 쪼개는것이다.
이떄, 문제를 해결하기 위한 역할 or 책임들로 쪼갤 수 있다.
예를들어 재판이라는 문제상황이 주어졌다. 즉 우리는 재판을 해야한다.


이때 우리는 자연스럽게 재판하는사람, 재판당하는사람 이렇게 두 역할이 필요한것을 알 수 있지만,
이는 사실 여러 책임들을 자연스럽게 추상화해서 떠올렸기 때문에 가능하다.
과정을 그려보면 다음과같다

(문제상황)재판요청 -> 증인호출 -> 증인나오기 -> 증인하기 ->재판하기

이러한 책임들을 응집도있게 묶어보자.
(증인호출,재판하기),(증인나오기,증인하기)

이때 우리는 이러한 책임들을 수행하기 위한것이, 행동이다.

참고로 책임은 작은책임, 큰책임 기준에따라 나뉠수있는데,
예를들어 강아지 집사의 책임은 강아지 산책하기, 강아지 밥주기, 강아지 목욕시키기가 있다고하자

산책하기의 책임은 여러 행동들로 구성될수있고, 밥주기, 목욕시키기 또한 마찬가지이다 , 이때 행동 = 메소드이다
이러한 책임들을 큰 책임으로 묶을수있다. 바로 "관리"라는 책임이다.
SRP에서 단일책임은 바로 이 큰책임을 의미한다.

그리고 이러한 큰책임을 다양한 객체가 수행할 수있을때, 우린 큰책임을 추상화하여 역할로 만들 수있다.

여기서 역할은 바로 인터페이스이다.


큰 책임의 추상화 -> 큰 인터페이스  = 역할
작은 책임 -> 작은 인터페이스 = 기능
이렇게봐도 무방할까?

그래서 한클래스에 큰 인터페이스만 상속받아야되고,

큰인터페이스는 작은인터페이스 여러개로 쪼개질순있다 이거지

이상적으로는 작은인터페이스만으로 책임을 구현하는게 이상적이지만,

쓸데없이 너무 복잡해져서 적당한 크기의 인터페이스로 추상화(역할)함으로써 문제상황을 해결하는거구나! 
